#!/usr/bin/env ruby

require 'optparse'
require 'fileutils'

symfony_version_option = nil

OptionParser.new do |opts|
  opts.banner = "Usage: #{File.basename($0)} [path]"

  opts.on("-h", "--help", "Displays this help info") do
    puts opts
    exit 0
  end

  opts.on("-s", "--symfony VERSION", "Capify specific symfony verion (1|2)") do |version|
    symfony_version_option = version.to_i
  end

  begin
    opts.parse!(ARGV)
  rescue OptionParser::ParseError => e
    warn e.message
    puts opts
    exit 1
  end
end

if ARGV.empty?
  abort "Please specify the directory to capifony, e.g. `#{File.basename($0)} .'"
elsif !File.exists?(ARGV.first)
  abort "`#{ARGV.first}' does not exist."
elsif !File.directory?(ARGV.first)
  abort "`#{ARGV.first}' is not a directory."
elsif ARGV.length > 1
  abort "Too many arguments; please specify only the directory to capify."
end

def unindent(string)
  indentation = string[/\A\s*/]
  string.strip.gsub(/^#{indentation}/, "")
end

base = ARGV.shift
symfony_version = (File.directory? File.join(base, 'config')) ? 1 : 2
symfony_version = symfony_version_option == nil ? symfony_version : symfony_version_option

if symfony_version == 2
  files = {
    "Capfile" => unindent(<<-FILE),
      load 'deploy' if respond_to?(:namespace) # cap2 differentiator
      Dir['vendor/bundles/*/*/recipes/*.rb'].each { |bundle| load(bundle) }
      load Gem.required_location('capifony', 'symfony2.rb')
      load 'app/config/deploy'
    FILE

    "app/config/deploy.rb" => 'set :application, "set your application name here"
set :domain,      "#{application}.com"
set :deploy_to,   "/var/www/#{domain}"

set :repository,  "#{domain}:/var/repos/#{application}.git"
set :scm,         :git
# Or: `accurev`, `bzr`, `cvs`, `darcs`, `subversion`, `mercurial`, `perforce`, `subversion` or `none`

role :web,        domain                         # Your HTTP server, Apache/etc
role :app,        domain                         # This may be the same as your `Web` server
role :db,         domain, :primary => true       # This is where Rails migrations will run

set  :keep_releases,  3'
  }
else
  files = {
    "Capfile" => unindent(<<-FILE),
      load 'deploy' if respond_to?(:namespace) # cap2 differentiator
      Dir['plugins/*/lib/recipes/*.rb'].each { |plugin| load(plugin) }
      load Gem.required_location('capifony', 'symfony1.rb')
      load 'config/deploy'
    FILE

    "config/deploy.rb" => 'set :application, "set your application name here"
set :domain,      "#{application}.com"
set :deploy_to,   "/var/www/#{domain}"

set :repository,  "#{domain}:/var/repos/#{application}.git"
set :scm,         :git
# Or: `accurev`, `bzr`, `cvs`, `darcs`, `subversion`, `mercurial`, `perforce`, `subversion` or `none`

role :web,        domain                         # Your HTTP server, Apache/etc
role :app,        domain                         # This may be the same as your `Web` server
role :db,         domain, :primary => true       # This is where Rails migrations will run

set  :keep_releases,  3'
  }
end

files.each do |file, content|
  file = File.join(base, file)
  if File.exists?(file)
    warn "[skip] '#{file}' already exists"
  elsif File.exists?(file.downcase)
    warn "[skip] '#{file.downcase}' exists, which could conflict with `#{file}'"
  else
    unless File.exists?(File.dirname(file))
      puts "[add] making directory '#{File.dirname(file)}'"
      FileUtils.mkdir(File.dirname(file))
    end
    puts "[add] writing '#{file}'"
    File.open(file, "w") { |f| f.write(content) }
  end
end

puts "[done] Symfony#{symfony_version.to_s} project capifonied!"
